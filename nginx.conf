
# ==================================================
# 1) Master process settings
# ==================================================
worker_processes  auto;
events {
    worker_connections  1024;
}

# ==================================================
# 2) RTMP + HLS configuration
# ==================================================
rtmp {
    server {
        # bind IPv4 and IPv6 on 1935 separately
        listen 1935;
        listen [::]:1935 ipv6only=on;

        chunk_size 8192;

        application live {
            live on;

            # HLS output
            hls on;
            hls_path /tmp/hls;
            hls_fragment 1;
            hls_playlist_length 10s;
            hls_cleanup on;
        }
    }
}

# ==================================================
# 3) HTTP server (for health check, HLS, static, proxy to Go)
# ==================================================
http {
    # MIME types for correct Content-Type headers
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  65;

    server {
        listen 8080;
        server_name _;

        # Fly health check endpoint
        location = /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Serve HLS fragments
        location /hls/ {
            alias /tmp/hls/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # Static assets
        location /static/ {
            alias /app/static/;
        }

        location ~* \.map$ {
            default_type application/json;
            return 200 '{"version":3,"file":"installHook.js","sources":["installHook.js"],"names":[],"mappings":""}';
        }




        # Proxy all other traffic to your Go backend
        location / {
            proxy_pass         http://127.0.0.1:9090;
            proxy_http_version 1.1;
            proxy_set_header   Host            $host;
            proxy_set_header   X-Real-IP       $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
